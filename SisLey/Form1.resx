<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>